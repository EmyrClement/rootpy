#!/usr/bin/env python
import ROOT
import sys
from rootpy.routines import getTrees
from optparse import OptionParser
import re

parser = OptionParser()
parser.add_option("-b","--branches",action="store",type="str",dest="branches",default=None,help="file containing one regex per line for branch selection")
options,args = parser.parse_args()

if options.branches is not None:
    branches_file = open(options.branches,'r')
    branches_keep = [re.compile(regex.strip()) for regex in branches_file.readlines()]

infiles = args

for infilename in infiles:
    inFile = ROOT.TFile.Open(infilename)
    outFile = ROOT.TFile.Open("optimized."+infilename,"recreate")
    trees = getTrees(inFile)
    outFile.cd()
    for tree in trees:
        if options.branches is not None:
            tree.SetBranchStatus('*',0)
            for branch in tree.GetListOfBranches():
                for branch_regex in branches_keep:
                    if re.match(branch_regex, branch.GetName()):
                        tree.SetBranchStatus(branch.GetName(),1)
                        break
        print "optimizing %s in %s..."% (tree.GetName(), infilename)
        newTree = tree.CloneTree(-1,"fast SortBasketsByEntry")
        newTree.OptimizeBaskets()
        newTree.Write("",ROOT.TObject.kOverwrite)
    inFile.Close()
    outFile.Close()
